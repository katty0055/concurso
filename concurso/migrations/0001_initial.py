# Generated by Django 4.2.3 on 2023-10-11 11:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('area_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_area', models.CharField(blank=True, db_comment='Descripcion de modulo/area.', max_length=100)),
            ],
            options={
                'db_table': 'area',
                'db_table_comment': 'Area (Modulos, Division)',
            },
        ),
        migrations.CreateModel(
            name='Asignatura',
            fields=[
                ('asignatura_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, max_length=10)),
                ('descripcion_asignatura', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'db_table': 'asignatura',
                'db_table_comment': 'Tabla de asignaturas.',
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('cargo_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_cargo', models.CharField(blank=True, db_comment='Descripcion del cargo.', max_length=100, null=True)),
            ],
            options={
                'db_table': 'cargo',
                'db_table_comment': 'Tabla de cargos.',
            },
        ),
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('carrera_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_carrera', models.CharField(blank=True, db_comment='Descripcion de carrera.', max_length=100, null=True)),
            ],
            options={
                'db_table': 'carrera',
                'db_table_comment': 'Tabla de carreras.',
            },
        ),
        migrations.CreateModel(
            name='Catedra',
            fields=[
                ('catedra_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('seccion', models.CharField(db_comment='Seccion de la catedra.')),
                ('asignatura_id', models.ForeignKey(blank=True, db_comment='Identificador de asignatura.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.asignatura')),
                ('carrera_id', models.ForeignKey(blank=True, db_comment='Identificacion de Carrera.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.carrera')),
            ],
            options={
                'db_table': 'catedra',
                'db_table_comment': 'Tabla de catedra.',
            },
        ),
        migrations.CreateModel(
            name='Concurso',
            fields=[
                ('concurso_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('anho_concurso', models.SmallIntegerField(db_comment='Anho del concurso.')),
                ('codigo_concurso', models.CharField(db_comment='Codigo del concurso.')),
                ('estado_seguimiento_concurso', models.CharField(blank=True, db_comment='Estado de seguimiento del concurso.', null=True)),
                ('estado_concurso', models.BooleanField(db_comment='Borrado logico del concurso.', default=True)),
                ('es_arancelado', models.BooleanField(blank=True, db_comment='Identificador de si es arancelado o no.', null=True)),
                ('vigencia_desde', models.DateField(blank=True, db_comment='Fecha de inicio de concurso.', null=True)),
                ('vigencia_hasta', models.DateField(blank=True, db_comment='Fecha de fin de concurso.', null=True)),
                ('denominacion_conc', models.CharField(db_comment='Denominacion del concurso')),
                ('es_postulacion_multiple', models.BooleanField(blank=True, db_comment='Identifica si en el concurso se admiten mas de una postulacion', null=True)),
            ],
            options={
                'db_table': 'concurso',
                'db_table_comment': 'Tabla de concursos.',
            },
        ),
        migrations.CreateModel(
            name='Dependencia',
            fields=[
                ('dependencia_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tipo_dependencia', models.CharField(db_comment='Identifica si es departamento, division, coordinacion, etc.', max_length=100)),
                ('descripcion_dependencia', models.CharField(blank=True, db_comment='Descripcion de la dependencia.', max_length=100)),
            ],
            options={
                'db_table': 'dependencia',
                'db_table_comment': 'Tabla de dependencias.',
            },
        ),
        migrations.CreateModel(
            name='Dias',
            fields=[
                ('dia_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_dia', models.CharField(db_comment='Descripcion de dia.')),
            ],
            options={
                'db_table': 'dias',
                'db_table_comment': 'Tabla de dias.',
            },
        ),
        migrations.CreateModel(
            name='Direccion',
            fields=[
                ('direccion_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_direccion', models.CharField(blank=True, db_comment='Descripcion de la direccion.', max_length=100)),
            ],
            options={
                'db_table': 'direccion',
                'db_table_comment': 'Direccion',
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('documento_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('path_documento', models.CharField(db_comment='Direccion de donde se almacena el documento.')),
                ('es_privado', models.BooleanField(db_comment='Identifica si es privado o no el documento.')),
                ('estado_documento', models.CharField(db_comment='Estado del documento.')),
                ('vigente', models.BooleanField(blank=True, db_comment='Vigencia del documento.', null=True)),
            ],
            options={
                'db_table': 'documento',
                'db_table_comment': 'Tabla que almacenara a los documentos de todas las entidades.',
            },
        ),
        migrations.CreateModel(
            name='ModalidadConcurso',
            fields=[
                ('modalidad_concurso_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_modalidad_concurso', models.CharField(db_comment='Descripcion de la modalidad del concurso.')),
            ],
            options={
                'db_table': 'modalidad_concurso',
                'db_table_comment': 'Modalidades del concurso. Ejemplo(Externo, Abreviado, Interno)',
            },
        ),
        migrations.CreateModel(
            name='ModalidadPuesto',
            fields=[
                ('modalidad_puesto_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_modalidad', models.CharField(db_comment='Descripcion modalidad.')),
            ],
            options={
                'db_table': 'modalidad_puesto',
                'db_table_comment': 'Tabla de modalidades de puestos.',
            },
        ),
        migrations.CreateModel(
            name='Puesto',
            fields=[
                ('puesto_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('perodicidad', models.CharField(blank=True, db_comment='Frecuencia de asistencia. (Lunes a viernes)', null=True)),
                ('vigencia_hasta', models.DateField(blank=True, db_comment='Fecha de fin de puesto.', null=True)),
                ('vigencia_desde', models.DateField(blank=True, db_comment='Fecha de inicio del puesto.', null=True)),
                ('periodo_contrato', models.CharField(blank=True, null=True)),
                ('remuneracion', models.IntegerField(blank=True, db_comment='Remuneracion del puesto.', null=True)),
                ('estado_puesto', models.BooleanField(db_comment='Estado del puesto.', default=True)),
                ('convocatoria', models.SmallIntegerField(db_comment='Convocatoria del puesto.(periodo academico: primer o segundo semestre)')),
                ('anho_puesto', models.SmallIntegerField(db_comment='Anho del puesto.')),
                ('categoria_salarial', models.CharField(blank=True, db_comment='Categoria salarial.', null=True)),
                ('cantidad_puestos', models.BigIntegerField(blank=True, null=True)),
                ('area_id', models.ForeignKey(blank=True, db_comment='Idenficador de area/modulo.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.area')),
                ('cargo_id', models.ForeignKey(blank=True, db_comment='Identificador de cargo.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.cargo')),
                ('catedra_id', models.ForeignKey(blank=True, db_comment='Identificacion de la catedra.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.catedra')),
                ('concurso_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.concurso')),
                ('dependencia_id', models.ForeignKey(blank=True, db_comment='Identificador de dependencia.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.dependencia')),
                ('direccion_id', models.ForeignKey(blank=True, db_comment='Identificador de direccion.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.direccion')),
                ('modalidad_puesto_id', models.ForeignKey(blank=True, db_comment='Modalidad del puesto(Traslado Permanente)', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.modalidadpuesto')),
            ],
            options={
                'db_table': 'puesto',
                'db_table_comment': 'Tabla de puestos(catedras).',
            },
        ),
        migrations.CreateModel(
            name='Requisito',
            fields=[
                ('requisito_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_requisito', models.CharField(db_comment='Descripcion del requisito.')),
            ],
            options={
                'db_table': 'requisito',
                'db_table_comment': 'Requisitos para la postulacion al concurso.',
            },
        ),
        migrations.CreateModel(
            name='Sede',
            fields=[
                ('sede_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_sede', models.CharField(db_comment='Descripcion de sede.')),
            ],
            options={
                'db_table': 'sede',
                'db_table_comment': 'Tabla de sede.',
            },
        ),
        migrations.CreateModel(
            name='TipoCargo',
            fields=[
                ('tipo_cargo_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_tipo_cargo', models.CharField(blank=True, db_comment='Descripcion del tipo de cargo.', max_length=100)),
            ],
            options={
                'db_table': 'tipo_cargo',
                'db_table_comment': 'Tabla de tipos de cargos.',
            },
        ),
        migrations.CreateModel(
            name='TipoConcurso',
            fields=[
                ('tipo_concurso_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_tipo_concurso', models.CharField(db_comment='Descripcion del tipo concurso.')),
            ],
            options={
                'db_table': 'tipo_concurso',
                'db_table_comment': 'Tabla de tipos de concursos.',
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('tipo_documento_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_tipo_documento', models.CharField(db_comment='Descripcion del tipo documento.')),
            ],
            options={
                'db_table': 'tipo_documento',
                'db_table_comment': 'Tabla de los tipos de documentos.',
            },
        ),
        migrations.CreateModel(
            name='TipoPuesto',
            fields=[
                ('tipo_puesto_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_puesto', models.CharField(db_comment='Descripcion del puesto.')),
            ],
            options={
                'db_table': 'tipo_puesto',
                'db_table_comment': 'Tipo de puesto (nombrado, contratado, nombrado temporal)',
            },
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('turno_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_turno', models.CharField(db_comment='Descripcion de turno.')),
                ('horario_referencial', models.CharField(blank=True, db_comment='Horario referencial del turno', null=True)),
            ],
            options={
                'db_table': 'turno',
                'db_table_comment': 'Tabla de turnos.',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('usuario_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('telefono', models.CharField(db_comment='Telefono de la persona.')),
                ('direccion_particular', models.CharField(db_comment='Direccion particular.')),
                ('fecha_nacimiento', models.DateField(blank=True, db_comment='Fecha de nacimiento de la persona.', null=True)),
                ('lugar_nacimiento', models.CharField(blank=True, db_comment='Lugar de nacimiento de la persona.', null=True)),
                ('nro_documento', models.CharField(db_comment='Numero de documento.', max_length=15)),
                ('apellido', models.CharField(db_comment='Apellido de la persona.', max_length=150)),
                ('nombre', models.CharField(db_comment='Nombre de la persona.', max_length=150)),
                ('correo', models.CharField(db_comment='Correo de la persona.')),
                ('usuario_nombre', models.CharField(db_comment='Nombre de usuario.', max_length=50)),
                ('password', models.CharField(db_comment='Contrasenha del usuario.')),
                ('estado_usuario', models.BooleanField(db_comment='Estado de la cuenta (True, False)', default=True)),
                ('sexo', models.CharField(blank=True, max_length=1, null=True)),
                ('documento_duplicado', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'usuario',
                'db_table_comment': 'Tabla de usuarios',
            },
        ),
        migrations.CreateModel(
            name='UsuarioDocumento',
            fields=[
                ('usuario_documento_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('fecha_subida', models.DateField(blank=True, db_comment='Fecha de subida del documento.', null=True)),
                ('documento', models.ForeignKey(blank=True, db_comment='Identificador de documento.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.documento')),
                ('usuario', models.ForeignKey(blank=True, db_comment='Identificador de usuario.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.usuario')),
            ],
            options={
                'db_table': 'usuario_documento',
                'db_table_comment': 'Tabla en donde se relacionan los documentos con los usuarios.',
            },
        ),
        migrations.CreateModel(
            name='SubArea',
            fields=[
                ('sub_area_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_sub_area', models.CharField(blank=True, db_comment='Descripcion del subarea', max_length=100)),
                ('area_id', models.ForeignKey(blank=True, db_comment='Idenficador de area/modulo.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.area')),
            ],
            options={
                'db_table': 'sub_area',
                'db_table_comment': 'Tabla de asignaturas/subareas.',
            },
        ),
        migrations.CreateModel(
            name='PuestoRequisito',
            fields=[
                ('puesto_requisito_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('puesto_id', models.ForeignKey(blank=True, db_comment='Identificador de puesto.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.puesto')),
                ('requisito_id', models.ForeignKey(blank=True, db_comment='Identificador de requisito.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.requisito')),
            ],
            options={
                'db_table': 'puesto_requisito',
                'db_table_comment': 'Tabla que relaciona los requisitos con el puesto.',
            },
        ),
        migrations.CreateModel(
            name='PuestoDocumento',
            fields=[
                ('id_puesto_documento', models.BigAutoField(primary_key=True, serialize=False)),
                ('fecha_agregada', models.DateTimeField(blank=True, null=True)),
                ('documento_id', models.ForeignKey(blank=True, db_comment='Identificador de documento.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.documento')),
                ('puesto_id', models.ForeignKey(blank=True, db_comment='Identificador de puesto.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.puesto')),
            ],
            options={
                'db_table': 'puesto_documento',
                'db_table_comment': 'Tabla que relaciona puesto y documento.',
            },
        ),
        migrations.AddField(
            model_name='puesto',
            name='sede_id',
            field=models.ForeignKey(blank=True, db_comment='Identificacion de sede.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.sede'),
        ),
        migrations.AddField(
            model_name='puesto',
            name='sub_area_id',
            field=models.ForeignKey(blank=True, db_comment='Identificador de asignatura.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.subarea'),
        ),
        migrations.AddField(
            model_name='puesto',
            name='tipo_puesto_id',
            field=models.ForeignKey(blank=True, db_comment='Identificador de tipo de puesto.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.tipopuesto'),
        ),
        migrations.AddField(
            model_name='puesto',
            name='turno_id',
            field=models.ForeignKey(blank=True, db_comment='Identificador de turno.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.turno'),
        ),
        migrations.CreateModel(
            name='Postulacion',
            fields=[
                ('postulacion_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('anho', models.SmallIntegerField(db_comment='Anho de la postulacion.')),
                ('fecha_postulacion', models.DateTimeField(db_comment='Fecha de la postulacion.')),
                ('cargo_id', models.ForeignKey(blank=True, db_comment='Identificador de cargo.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.cargo')),
                ('concurso_id', models.ForeignKey(blank=True, db_comment='Identificador de concurso.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.concurso')),
                ('puesto_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.puesto')),
                ('usuario_id', models.ForeignKey(blank=True, db_comment='Identificador de usuario.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.usuario')),
            ],
            options={
                'db_table': 'postulacion',
                'db_table_comment': 'Tabla de postulacion.',
            },
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('horario_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('hora_desde', models.DateTimeField(blank=True, db_comment='Horario de inicio.', null=True)),
                ('hora_hasta', models.DateTimeField(blank=True, db_comment='Horario de finalizacion.', null=True)),
                ('dia_id', models.ForeignKey(blank=True, db_comment='Identificador de dia.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.dias')),
                ('puesto_id', models.ForeignKey(blank=True, db_comment='Identificador de puesto.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.puesto')),
            ],
            options={
                'db_table': 'horario',
                'db_table_comment': 'Tabla de horarios.',
            },
        ),
        migrations.CreateModel(
            name='Enfasis',
            fields=[
                ('enfasis_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('descripcion_enfasis', models.CharField(db_comment='Descripcion de enfasis.')),
                ('carrera_id', models.ForeignKey(blank=True, db_comment='Identificacion de Carrera.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.carrera')),
            ],
            options={
                'db_table': 'enfasis',
                'db_table_comment': 'Tabla de enfasis.',
            },
        ),
        migrations.CreateModel(
            name='DocumentoPostulacion',
            fields=[
                ('documento_postulacion_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('aprobado', models.BooleanField(blank=True, db_comment='Verificacion de la aprobacion del documento.', null=True)),
                ('documento_id', models.ForeignKey(blank=True, db_comment='Identificador de documento.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.documento')),
                ('postulacion_id', models.ForeignKey(blank=True, db_comment='Identificador de postulacion', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.postulacion')),
            ],
            options={
                'db_table': 'documento_postulacion',
                'db_table_comment': 'Tabla que relaciona documento con postulacion.',
            },
        ),
        migrations.AddField(
            model_name='documento',
            name='tipo_documento',
            field=models.ForeignKey(blank=True, db_comment='Identificador de tipo documento.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.tipodocumento'),
        ),
        migrations.AddField(
            model_name='dependencia',
            name='direccion_id',
            field=models.ForeignKey(blank=True, db_comment='Identificador de direccion.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.direccion'),
        ),
        migrations.CreateModel(
            name='ConcursoRequisito',
            fields=[
                ('concurso_requisito_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('concurso_id', models.ForeignKey(blank=True, db_comment='Identificador de concurso.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.concurso')),
                ('requisito_id', models.ForeignKey(blank=True, db_comment='Identificador de requisito.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.requisito')),
            ],
            options={
                'db_table': 'concurso_requisito',
                'db_table_comment': 'Tabla donde se relacionan los requisitos con el concurso.',
            },
        ),
        migrations.CreateModel(
            name='ConcursoDocumento',
            fields=[
                ('id_concurso_documento', models.BigAutoField(primary_key=True, serialize=False)),
                ('concurso_id', models.ForeignKey(blank=True, db_comment='Identificador de concurso.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.concurso')),
                ('documento_id', models.ForeignKey(blank=True, db_comment='Identificador de documento.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.documento')),
            ],
            options={
                'db_table': 'concurso_documento',
                'db_table_comment': 'Tabla que relaciona concurso  y documento.',
            },
        ),
        migrations.AddField(
            model_name='concurso',
            name='modalidad_concurso_id',
            field=models.ForeignKey(blank=True, db_comment='Columna que identifica a la tabla modalidad.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.modalidadconcurso'),
        ),
        migrations.AddField(
            model_name='concurso',
            name='tipo_concurso_id',
            field=models.ForeignKey(blank=True, db_comment='Identificador de tipo concurso.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.tipoconcurso'),
        ),
        migrations.AddField(
            model_name='catedra',
            name='enfasis_id',
            field=models.ForeignKey(blank=True, db_comment='Idenficacion de enfasis.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.enfasis'),
        ),
        migrations.CreateModel(
            name='CargoRequisito',
            fields=[
                ('cargo_requisito_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cargo_id', models.ForeignKey(blank=True, db_comment='Identificador de cargo.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.cargo')),
                ('requisito_id', models.ForeignKey(blank=True, db_comment='Identificador de requisito.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.requisito')),
            ],
            options={
                'db_table': 'cargo_requisito',
                'db_table_comment': 'Tabla que relaciona los requisitos con el cargo.',
            },
        ),
        migrations.CreateModel(
            name='CargoDocumento',
            fields=[
                ('documento_cargo_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cargo', models.ForeignKey(blank=True, db_comment='Identificador de cargo.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.cargo')),
                ('documento', models.ForeignKey(blank=True, db_comment='Identificador de documento.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.documento')),
            ],
            options={
                'db_table': 'cargo_documento',
                'db_table_comment': 'Tabla que relaciona documento con cargo.',
            },
        ),
        migrations.AddField(
            model_name='cargo',
            name='tipo_cargo',
            field=models.ForeignKey(blank=True, db_comment='Idetificador de tipo cargo.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.tipocargo'),
        ),
        migrations.AddField(
            model_name='asignatura',
            name='sub_area',
            field=models.ForeignKey(blank=True, db_comment='Identificador de asignatura.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.subarea'),
        ),
        migrations.AddField(
            model_name='area',
            name='dependencia',
            field=models.ForeignKey(blank=True, db_comment='Identificador de dependencia.', default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='concurso.dependencia'),
        ),
    ]
